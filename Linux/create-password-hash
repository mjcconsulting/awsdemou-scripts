#!/bin/bash
#
# Create Password Hash for PAM or OpenVPNAS
#
# This script is meant to be run by each user to convert their plaintext passwords into the two hash formats
# we may need to create users via automation.
#
# To set the password for a linux user in automation using the SHA-512 Hash, you can use:
# # echo "username:encryptedPassword" | chpasswd -e
#

#  1. Initalize Environment

type=pam
salt=$(LC_CTYPE=C tr -dc a-zA-Z0-9 < /dev/urandom | head -c8)
unset password


#  2. Define functions

usage() {
    echo "Usage: ${BASH_SOURCE##*/} [-s salt] password"
    echo "  -t type         Type (default: $type)"
    echo "  -s salt         Salt (default: $salt)"
    echo "  password        Plaintext password to Hash"
}


#  3. Parse command line options

while getopts t:s:? arg; do
    case $arg in
    t)  type="$OPTARG";;
    s)  salt="$OPTARG";;
    ?)  usage
        exit 1;;
    esac
done

shift $(($OPTIND - 1))

password=$1


#  4. Validate environment

if [ -z $type ]; then
    echo "-t type missing!"
    exit 10
else
    case $type in
      pam|openvpn)
        ;;
      *)
        echo "-t $type invalid! Must be pam or openvpn"
        exit 11;;
    esac
fi

if [ -z $salt ]; then
    echo "-s salt missing!"
    exit 12
elif [[ ! $salt =~ ^[a-zA-Z0-9]{8}$ ]]; then
    echo "-s \"$salt\" invalid!"
    echo "Salt must be exactly 8 alphanumeric characters"
    exit 13
fi

if [ -z "$password" ]; then
    echo "password missing!"
    exit 20
elif [[ ! $password =~ ^[-_a-zA-Z0-9]{12,64}$ ]]; then
    error "password \"$password\" invalid!"
    echo "Password must be between 12 and 64 characters alphanumeric characters, dashes and underscores"
    exit 21
fi


#  5. Main

case $type in
  pam)
    hash=$(python -c "import crypt, getpass, pwd; print(crypt.crypt('$password', '\$6\$$salt\$'))")
    ;;
  openvpn)
    hash=$(echo -n "$password" | sha256sum | cut -f 1 -d ' ')
    ;;
esac

echo $hash
